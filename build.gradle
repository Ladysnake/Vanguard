plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.jfrog.bintray" version '1.8.4'
	id 'org.ajoberstar.grgit' version '3.1.1'
	id 'com.github.breadmoirai.github-release' version '2.2.9'
	id "com.wynprice.cursemaven" version "2.1.1"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	jcenter()
	maven { url 'https://jitpack.io' }

	maven {
		name = "Cotton"
		url = "http://server.bbkr.space:8081/artifactory/libs-release/"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// cloth config
	modApi("me.shedaniel.cloth:config-2:4.8.2") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include "me.shedaniel.cloth:config-2:4.8.2"

	// mod menu
	modImplementation("io.github.prospector:modmenu:1.14.6+build.31") {
		exclude(group: "net.fabricmc.fabric-api")
	}

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
	// JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
	// We'll use that if it's available, but otherwise we'll use the older option.
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

apply from: 'release.gradle'